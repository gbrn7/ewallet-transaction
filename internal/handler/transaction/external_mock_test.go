// Code generated by MockGen. DO NOT EDIT.
// Source: external.go
//
// Generated by this command:
//
//	mockgen -source=external.go -destination=external_mock_test.go -package=transaction
//

// Package transaction is a generated GoMock package.
package transaction

import (
	context "context"
	external "ewallet-transaction/external"
	models "ewallet-transaction/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockExternal is a mock of External interface.
type MockExternal struct {
	ctrl     *gomock.Controller
	recorder *MockExternalMockRecorder
	isgomock struct{}
}

// MockExternalMockRecorder is the mock recorder for MockExternal.
type MockExternalMockRecorder struct {
	mock *MockExternal
}

// NewMockExternal creates a new mock instance.
func NewMockExternal(ctrl *gomock.Controller) *MockExternal {
	mock := &MockExternal{ctrl: ctrl}
	mock.recorder = &MockExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternal) EXPECT() *MockExternalMockRecorder {
	return m.recorder
}

// CreditBalance mocks base method.
func (m *MockExternal) CreditBalance(ctx context.Context, token string, req external.UpdateBalance) (*external.UpdateBalanceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreditBalance", ctx, token, req)
	ret0, _ := ret[0].(*external.UpdateBalanceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreditBalance indicates an expected call of CreditBalance.
func (mr *MockExternalMockRecorder) CreditBalance(ctx, token, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreditBalance", reflect.TypeOf((*MockExternal)(nil).CreditBalance), ctx, token, req)
}

// DebitBalance mocks base method.
func (m *MockExternal) DebitBalance(ctx context.Context, token string, req external.UpdateBalance) (*external.UpdateBalanceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DebitBalance", ctx, token, req)
	ret0, _ := ret[0].(*external.UpdateBalanceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DebitBalance indicates an expected call of DebitBalance.
func (mr *MockExternalMockRecorder) DebitBalance(ctx, token, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DebitBalance", reflect.TypeOf((*MockExternal)(nil).DebitBalance), ctx, token, req)
}

// SendNotification mocks base method.
func (m *MockExternal) SendNotification(ctx context.Context, recipient, templateName string, placeHolder map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendNotification", ctx, recipient, templateName, placeHolder)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendNotification indicates an expected call of SendNotification.
func (mr *MockExternalMockRecorder) SendNotification(ctx, recipient, templateName, placeHolder any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendNotification", reflect.TypeOf((*MockExternal)(nil).SendNotification), ctx, recipient, templateName, placeHolder)
}

// ValidateToken mocks base method.
func (m *MockExternal) ValidateToken(ctx context.Context, token string) (models.TokenData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", ctx, token)
	ret0, _ := ret[0].(models.TokenData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockExternalMockRecorder) ValidateToken(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockExternal)(nil).ValidateToken), ctx, token)
}
